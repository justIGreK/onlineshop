basePath: /
definitions:
  handler.addProduct:
    properties:
      amount:
        type: integer
      cost:
        type: number
      description:
        type: string
      name:
        type: string
    required:
    - amount
    - cost
    - name
    type: object
  handler.addProductToCart:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  handler.changeBalance:
    properties:
      balance:
        type: number
    type: object
  handler.deleteAccount:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  handler.signInInput:
    properties:
      login:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  handler.signUp:
    properties:
      login:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  models.UpdateProduct:
    properties:
      amount:
        type: integer
      cost:
        type: number
      description:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Online Shop Application
  title: onlineShop App API
  version: "1.0"
paths:
  /api/cart/:
    get:
      consumes:
      - application/json
      description: get cart by your id from database
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Check your cart
      tags:
      - cart
  /api/cart/add:
    post:
      consumes:
      - application/json
      description: add product to your cart by id and amount of product
      parameters:
      - description: NewProduct
        in: body
        name: balance
        required: true
        schema:
          $ref: '#/definitions/handler.addProductToCart'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add product to your cart
      tags:
      - cart
  /api/cart/order:
    post:
      consumes:
      - application/json
      description: create order from your cart
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Make order
      tags:
      - cart
  /api/orders/:
    get:
      consumes:
      - application/json
      description: get your orders list from database
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get orderList
      tags:
      - orders
  /api/orders/{id}:
    get:
      consumes:
      - application/json
      description: get order by id from database
      parameters:
      - description: order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get order by id
      tags:
      - orders
  /api/products/:
    get:
      consumes:
      - application/json
      description: get product list from database
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get productlist
      tags:
      - products
    post:
      consumes:
      - application/json
      description: add product to database
      parameters:
      - description: NewProduct
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.addProduct'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add product
      tags:
      - products
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      description: delete product by id from database
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete product by id
      tags:
      - products
    get:
      consumes:
      - application/json
      description: get product by id from database
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get product by id
      tags:
      - products
    put:
      consumes:
      - application/json
      description: change name, cost or amount of product from database
      parameters:
      - description: NewProduct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Change info about product
      tags:
      - products
  /api/users/:
    delete:
      consumes:
      - application/json
      description: delete user or change user acc to inactive
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.deleteAccount'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
    get:
      description: get list of users
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get Userlist
      tags:
      - users
  /api/users/{id}:
    get:
      description: get user by id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get User
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update balance of user
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: NewBalance
        in: body
        name: balance
        required: true
        schema:
          $ref: '#/definitions/handler.changeBalance'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - users
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses: {}
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      parameters:
      - description: reg input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signUp'
      produces:
      - application/json
      responses: {}
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
