run:
  concurrency: 8
  timeout: 10m
  issues-exit-code: 1

linters:
  disable-all: true
  enable:
    # # Enabled by Default
    - errcheck # checking for unchecked errors in Go code. These unchecked errors can be critical bugs in some cases.
    - gosimple # specializes in simplifying code.
    - govet # examines Go source code and reports suspicious constructs.
    - ineffassign # detects when assignments to existing variables are not used.
    - staticcheck # it's a set of rules from staticcheck. It's not the same thing as the staticcheck binary.
    - unused # checks Go code for unused constants, variables, functions and types.
    # Disabled by Default
    - asasalint # check for pass []any as any in variadic func(...any).
    - asciicheck # checks that all code identifiers does not have non-ASCII symbols in the name.
    - bidichk # checks for dangerous unicode character sequences.
    - bodyclose # checks whether HTTP response body is closed successfully.
    - depguard # checks if package imports are in a list of acceptable packages.
    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - exportloopref # checks for pointers to enclosing loop variables. As of Go 1.22, this problem no longer occurs and fixed by Go team.
    - gocritic # provides diagnostics that check for bugs, performance and style issues.
    - gofmt # checks whether code was gofmt-ed.
    - gosec # inspects source code for security problems.
    - lll # reports long lines.
    - makezero # finds slice declarations with non-zero initial length.
    - misspell # finds commonly misspelled English words.
    - mnd # an analyzer to detect magic numbers
    - nilerr # finds the code that returns nil even if it checks that the error is not nil.
    - nolintlint # reports ill-formed or insufficient nolint directives.
    - testifylint # checks usage of github.com/stretchr/testify.
    - unconvert # removes unnecessary type conversions.
    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library.
    - wastedassign # finds wasted assignment statements.
    - whitespace # checks for unnecessary newlines at the start and end of functions, if, for, etc.
    - wrapcheck # checks that errors returned from external packages are wrapped.

linters-settings:
  gosec:
    excludes:
      # duplicates errcheck
      - G104
  lll:
    line-length: 120
  misspell:
    locale: US
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.
    # Such cases aren't reported by default.
    # Default: false
    check-blank: true
    exclude-functions:
      - (io.Closer).Close
  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: not allowed
  wrapcheck:
    ignorePackageGlobs:
      - github.com/go-ozzo/ozzo-validation/*

issues:
  exclude-use-default: false
  exclude-rules:
    - linters:
        - gosec
        - lll
        - wrapcheck
      path: _test\.go
